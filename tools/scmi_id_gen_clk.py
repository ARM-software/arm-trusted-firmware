#!/usr/bin/python3

def extract_clock_data(filename):
    table = [["Type", "Device Name", "Clock Name", "Clock String Name", "SCMI clk-id"]]

    with open(filename, 'r') as file:
        line_number = 0  # Serial number for table entries

        for line in file:
            line = line.strip()

            # Only process lines that contain AM62L_SCMI_CLOCK_
            # if line.startswith("AM62L_SCMI_CLOCK_") and "(" in line and ")" in line:
            # Identify if it's MUX or PARENT
            clock_type = "MUX" if "MUX" in line else "PARENT"

            # Extract the contents inside the parentheses
            start = line.find("(") + 1
            end = line.rfind(")")
            args = line[start:end].split(",")

            if len(args) == 3:
                device_name = args[0].strip()
                clock_name = args[1].strip()
                clock_string_name = args[2].strip().replace("str(", "").replace(")", "")

                table.append([clock_type, device_name, clock_name,
                              clock_string_name, str(line_number)])
                line_number += 1

    return table

def print_table_rst(table):
    """Prints table in reStructuredText (reST) format."""
    col_widths = [max(len(row[i]) for row in table) for i in range(len(table[0]))]

    # Print table header separator
    print("+" + "+".join("-" * (w + 2) for w in col_widths) + "+")

    for row in table:
        print("| " + " | ".join(cell.ljust(col_widths[j]) for j, cell in enumerate(row)) + " |")
        print("+" + "+".join("-" * (w + 2) for w in col_widths) + "+")

'''
Sample input:
ti_scmi_clock_t clock_table[] = {
	AM62L_SCMI_CLOCK_MUX(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_ADC_CLK, str(ADC0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_ADC_CLK_PARENT_GLUELOGIC_HFOSC0_CLK,str(ADC0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_ADC_CLK_PARENT_SAM62_PLL_CTRL_WRAP_WKUP_0_CHIP_DIV1_CLK_CLK12,str(ADC0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_ADC_CLK_PARENT_POSTDIV4_16FF_WKUP_0_HSDIVOUT8_CLK,str(ADC0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_ADC_CLK_PARENT_BOARD_0_EXT_REFCLK1_OUT,str(ADC0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_SYS_CLK,str(ADC0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_ADC0, AM62LX_DEV_ADC0_VBUS_CLK,str(ADC0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_MAIN_GPIOMUX_INTROUTER0, AM62LX_DEV_MAIN_GPIOMUX_INTROUTER0_INTR_CLK,str(MAIN_GPIOMUX_INTROUTER0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_TIMESYNC_INTROUTER0, AM62LX_DEV_TIMESYNC_INTROUTER0_INTR_CLK,str(TIMESYNC_INTROUTER0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPPI_CLK_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK_MUX(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_POSTDIV4_16FF_WKUP_0_HSDIVOUT7_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_POSTDIV4_16FF_MAIN_0_HSDIVOUT6_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_BOARD_0_CP_GEMAC_CPTS0_RFT_CLK_OUT,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_CLK_32K_RC_SEL_OUT0,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_BOARD_0_WKUP_EXT_REFCLK0_OUT,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_BOARD_0_EXT_REFCLK1_OUT,str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_SAM62_PLL_CTRL_WRAP_WKUP_0_CHIP_DIV1_CLK_CLK, str(CPSW0)),
	AM62L_SCMI_CLOCK_PARENT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_RFT_CLK_PARENT_HSDIV4_16FFT_MAIN_0_HSDIVOUT0_CLK, str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_GMII1_MR_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_GMII1_MT_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_GMII2_MR_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_GMII2_MT_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_GMII_RFT_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_RGMII_MHZ_250_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_RGMII_MHZ_50_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_RGMII_MHZ_5_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_RMII1_MHZ_50_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_RMII2_MHZ_50_CLK,str(CPSW0)),
	AM62L_SCMI_CLOCK_OUTPUT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_GENF0,str(CPSW0)),
	AM62L_SCMI_CLOCK_OUTPUT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_CPTS_GENF1,str(CPSW0)),
	AM62L_SCMI_CLOCK_OUTPUT(AM62LX_DEV_CPSW0, AM62LX_DEV_CPSW0_MDIO_MDCLK_O,str(CPSW0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPT2_AGGR0, AM62LX_DEV_CPT2_AGGR0_VCLK_CLK,str(CPT2_AGGR0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_CPT2_AGGR1, AM62LX_DEV_CPT2_AGGR1_VCLK_CLK,str(CPT2_AGGR1)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_WKUP_CPT2_AGGR0, AM62LX_DEV_WKUP_CPT2_AGGR0_VCLK_CLK,str(WKUP_CPT2_AGGR0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_STM0, AM62LX_DEV_STM0_ATB_CLK,str(STM0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_STM0, AM62LX_DEV_STM0_CORE_CLK,str(STM0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_STM0, AM62LX_DEV_STM0_VBUSP_CLK,str(STM0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_DEBUGSS_WRAP0, AM62LX_DEV_DEBUGSS_WRAP0_ATB_CLK,str(DEBUGSS_WRAP0)),
	AM62L_SCMI_CLOCK(AM62LX_DEV_DEBUGSS_WRAP0, AM62LX_DEV_DEBUGSS_WRAP0_CORE_CLK,str(DEBUGSS_WRAP0)),

'''

if __name__ == "__main__":
    filename = "clk_array_old.txt"  # Change this to your actual C file name
    table = extract_clock_data(filename)
    print_table_rst(table)
